1. 이진탐색에 대해 간단히 설명하시오.

정렬된 배열에서 특정한 값을 찾기위한 방법중 하나이다.
먼저 배열의 중앙값을 찾고 그 값 찾는 값과 같다면 한번에 탐색이 끝나는 것이고
그렇지 않고 찾는 값이 중앙값보다 작으면 배열의 처음부터 중앙값까지 다시 이진탐색을 진행하고
찾는 값이 중앙값보다 크면 배열의 중앙값부터 끝까지 다시 이진탐색을 진행한다.
위와 같은 탐색을 반복하며 값을 찾으면 끝나게 되거나 계속해서 탐색을 진행할수록 배열의 길이가 절반, 그 절반으로 
그 길이가 짧아지다가 배열의 길이가 1이 되어도 그 값을 찾지 못하면 그 값은 배열에 없는 것이다.




2. 다음과 같은 배열과 이 배열에서 key값을 이진탐색으로 찾는 코드 일부가 주어진다. 비어
있는 부분을 파이썬 코드 또는 pseudo-code로 작성해 key를 찾으면 True, 실패하면 False
를 반환하는 함수를 완성하라. (단, 재귀함수로 작성해서는 안된다.)


- 파이썬 코드 - 
def binarySearch(a, N, key):
    start = 0
    end = N-1
    while start <= end:                             # start 와 end가 같아 질때까지 반복할 것이다. (배열의 길이가 1일때까지)
        mid = (start + end) // 2                    # 중앙값의 위치는 (start + end) // 2  이다.
        if a[mid] == key:                           # 그 중앙값이 key이면 True 리턴
            return True
        elif a[mid] > key:                          # key가 중앙값보다 작으면 end 값을 mid - 1으로 바꾸어 다시 탐색한다.
            end = mid - 1
        else:                                       # key가 중앙값보다 크면 start 값을 mid + 1으로 바꾸어 다시 탐색한다.
            start = mid + 1
    return False                                    # start와 end가 같아져도 key를 찾지 못했다면 False를 반환한다.




